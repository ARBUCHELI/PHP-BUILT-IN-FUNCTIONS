# INTRO TO BUILT-IN PHP FUNCTIONS
---------------------------------

* Introduction
--------------
	If you’ve been paying attention so far, you might have picked up a theme in programming—shortcuts. Defining our own functions gives us an easier way to repeat similar code 
	throughout a program. But some tasks are so common that the language comes with them by default.

	PHP comes with a number of built-in functions. These functions—also known as internal functions— can be invoked without writing them ourselves. In this lesson, we’ll explore some 
	useful built-in functions and empower you to discover new built-in functions yourself. This will quickly become an essential part of your developer toolkit!

	Let’s get started.

index.php
---------
<?php
echo("This works!\n");

echo "This also works!\n";

//echo("This would NOT work", "\n");

echo "Buuuut!", " ", "This", " ", "does!", "\n";

===================================================================================================================================================================

* Working with Variables
------------------------
	PHP includes useful built-in functions for getting information about variables. The gettype() function takes a variable as its argument and returns a string value representing the 
	data type of the argument.

		$name = "Aisle Nevertell";
		$age = 1000000;
 
		echo gettype($name); // Prints: string
 
		echo gettype($age); // Prints: integer

	Notice that we didn’t write a definition for the gettype() function ourselves—it’s built into PHP. Since the function is included within the language itself, we can just call it 
	anywhere within our PHP code.

	Let’s take a look at another built-in function! The var_dump() function also takes a variable argument. It prints details about the argument it receives.

		var_dump($name); // Prints: string(15) "Aisle Nevertell"
 
		var_dump($age); // Prints: int(1000000)

	In the code above, we first used var_dump() to print information about the variable $name. string(15)—the variable’s type and length—were printed followed by the value held by the 
	variable.

	Next, we used var_dump() to print information about the variable $age. Here, the integer is printed within the parentheses.

	As we learn more data types—especially increasingly complex data types—we’ll see how useful these two functions can be. For now, let’s practice using them with the types of data 
	we know!

index.php
---------
<?php
namespace Codecademy;

$first = "Welcome to the magical world of built-in functions.";
  
$second = 82137012983; 

//Write your code below:
echo gettype($first);
echo gettype($second);

echo var_dump($first);
echo var_dump($second);

==================================================================================================================================================================

* String Functions
------------------
	We can find PHP built-in functions to accomplish common tasks. Need to reverse a string? There’s a built-in function for that!

	The strrev() function takes in a string as its argument and returns a string with all of the characters of the original string in reverse order.

	Let’s see it in action:

		echo strrev("Hello, World!"); // Prints: !dlroW ,olleH

	Remember that we can use the values returned from functions directly (rather than saving them into variables). In the code above, we used echo to print the value returned from 
	invoking the strrev() function with the string "Hello, World!" as its argument.

	PHP also comes with built-in functions to change the capitalization of a string. We can use the strtolower() function to transform an argument string into all lowercase letters:

		echo strtolower("HeLLo"); // Prints: hello

	Built-in functions often have multiple parameters. The str_repeat() function takes a string as its first argument and a number as its second. It returns a string containing the 
	argument string repeated the argument number of times.

		echo str_repeat("hi", 10); // Prints: hihihihihihihihihihi 

	In the above code we used echo to print the value returned from invoking str_repeat() with "hi" and 10 as its arguments—"hihihihihihihihihihi" .

	Let’s practice!

index.php
---------
<?php
namespace Codecademy;

// Write your code below:
echo strrev(".pu ti peeK .taerg gniod er'uoY");

echo strtolower("SOON, tHiS WILL Look NoRmAL.");

echo str_repeat("\nThere's no place like home.\n", 3);

==================================================================================================================================================================






















